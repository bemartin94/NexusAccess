from pydantic import BaseModel, EmailStr
from typing import Optional

class VisitorBase(BaseModel):
    name: Optional[str] = None # Explicitly set default to None for Optional fields
    last_name: Optional[str] = None
    id_card: Optional[int] = None # Changed from str to int
    phone: Optional[str] = None
    email: Optional[EmailStr] = None
    picture: Optional[str] = None
    supervisor_id: Optional[int] = None
    venue_id: Optional[int] = None
    id_card_type_id: Optional[int] = None

    model_config = {
        "from_attributes": True,
        "extra": "forbid"
    }

class VisitorCreate(VisitorBase):
    id_card: int # Changed from str to int (and made mandatory here)
    email: EmailStr # Made mandatory here, as per your original definition

    model_config = {
        "from_attributes": True,
        "extra": "forbid"
    }

class VisitorUpdate(VisitorBase):
    pass

class VisitorResponse(VisitorBase):
    id: int # ID is generated by the database, so it's required in the response

    model_config = {
        "from_attributes": True,
        "extra": "forbid"
    }
